# unixy
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias e="$EDITOR"
alias tophistory="history | awk '{a[$2]++}END{for(i in a){print a[i] " " i}}' | sort -rn | head" # https://coderwall.com/p/o5qijw
alias l="ls -Al"
alias ll="ls -AGl"
alias ln="ln -v"
alias ls="ls -F"
alias m="mail -f /var/mail/$(whoami)"
alias tjf="tar -jxvf"
alias tlf="tail -f"
alias top="top -o cpu -O vsize"
alias tzf="tar -zxvf"
alias v="$VISUAL"
# todo: alias wtf= look for something like /filename:## in last output and edit it
# $ screencapture -o - | ocr? and try to find "wtf" and then look around what's above and to the right? for a filename(:#|"line")

# mac-y
alias tac="tail -r"
alias vim="/usr/local/bin/mvim -v"

# rails
function rc {
  FLAGS=""
  if [[ -z "$(gem list pry | grep pry-rails)" ]]; then
    FLAGS="--irb=$(which pry)"
  fi

  if [ -e script/rails ]; then
    script/rails console $FLAGS $@
  elif [ -e bin/rails ]; then
    bin/rails console $FLAGS $@
  else
    script/console --irb=$(which pry) $@
  fi
}
function rs {
  if [ -e script/rails ]; then
    script/rails server $@
  elif [ -e bin/rails ]; then
    bin/rails server $@
  else
    script/server $@
  fi
}
alias rss="rescue rails server"

# rake
alias brake="bundle exec rake"
alias rT="rake -T"
alias rdm="rake db:migrate db:test:prepare"
alias rdmp="rake db:migrate db:test:prepare parallel:prepare"
alias rj="rake jasmine"
alias rjc="rake jasmine:ci"
alias rps="rake parallel:spec"

# git
alias gap="git add -p"
alias gb="git branch --color"
alias gbc="git branch --no-color | sed -e '/^[^*]/d' -e 's/^* //'" # git branch current
alias gc="git checkout"
alias gd="git diff --color-words='[^[:space:]]|([[:alnum:]]|UTF_8_GUARD)+'."
alias gds="gd --staged"
alias gl="git lg"
alias gm="git mergetool"
alias gp="git pull"
alias gpr="git show-branch \$([[ -e .git ]] && git rev-parse --abbrev-ref HEAD) origin/\$([[ -e .git ]] && git rev-parse --abbrev-ref HEAD) && git pull --rebase"
alias gpx="gp && gitx"
alias gq="git push"
alias gs="git status --short"
alias gtree="git log --oneline --decorate --graph"

# bundle
alias bindle="bundle install"

# rspec
alias rspec="rspec -c"

# dev-y
alias ack="echo don\'t you mean $ ag"
alias b="bundle"
alias clj="java -cp ~/.m2/repository/org/clojure/clojure/1.5.1/clojure-1.5.1.jar clojure.main"
alias deploy_heroku="rspec && git push heroku master"
alias irb="echo how about pry"
alias hrk-down="heroku ps:scale web=0"
alias hrk-up="heroku ps:scale web=1"
alias jn="jasmine-node"
alias jnc="jn --coffee"
alias local_node="heroku ps:scale web=0 && npm start; heroku ps:scale web=1"
alias nw="/Applications/node-webkit.app/Contents/MacOS/node-webkit"
alias r="rake"
alias rr="if [[ -e ./tmp/restart.txt ]]; then touch ./tmp/restart.txt && echo Restarted server; else echo No ./tmp/restart.txt?; fi"
alias start_postgres="pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start"

